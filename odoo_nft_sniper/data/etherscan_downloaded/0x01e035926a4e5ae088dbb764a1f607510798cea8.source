{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.15;\r\n\r\ninterface IERC721 {\r\n    function ownerOf(uint256) external view returns (address);\r\n}\r\n\r\ncontract MulticallOwners {\r\n    /**\r\n     * @dev Returns array of {tokenId} ERC-721 owners from `collection`, ranging from `startId` to `endId`.\r\n     */\r\n    function getOwners(\r\n        address collection,\r\n        uint256 startId,\r\n        uint256 endId\r\n    ) external view returns (address[] memory) {\r\n        IERC721 IContract = IERC721(collection);\r\n        uint256 total = endId - startId + 1;\r\n        address[] memory addresses = new address[](total);\r\n        for (uint256 i = 0; i < total; i++) {\r\n            address a = IContract.ownerOf(startId + i);\r\n            addresses[i] = a;\r\n        }\r\n        return addresses;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endId\",\"type\":\"uint256\"}],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MulticallOwners","CompilerVersion":"v0.8.15+commit.e14f2714","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cb16f7ad008b1e71813f70eafae89713a6f20a634b3fd0906574184f6bd0cc94"}]}