{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\ncontract UniswapV2Util {\r\n\r\n    struct PoolInfo {\r\n        address token;\r\n        uint reserve;\r\n        string symbol;\r\n        string name;\r\n        uint8 decimals;\r\n    }\r\n\r\n    function _getPoolInfo(address pool) internal view returns (PoolInfo[] memory poolInfos){\r\n        IUniswapV2Pair pair = IUniswapV2Pair(pool);\r\n        address token0Address = pair.token0();\r\n        address token1Address = pair.token1();\r\n        IERC20 token0 = IERC20(token0Address);\r\n        IERC20 token1 = IERC20(token1Address);\r\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(pool).getReserves();\r\n\r\n        PoolInfo memory poolInfo0 = PoolInfo(token0Address, reserve0, token0.symbol(), token0.name(), token0.decimals());\r\n        PoolInfo memory poolInfo1 = PoolInfo(token1Address, reserve1, token1.symbol(), token1.name(), token1.decimals());\r\n\r\n        poolInfos = new PoolInfo[](2);\r\n\r\n        poolInfos[0] = poolInfo0;\r\n        poolInfos[1] = poolInfo1;\r\n\r\n        return poolInfos;\r\n    }\r\n\r\n    function getPoolInfo(address pool) external view returns (PoolInfo[] memory poolInfos){\r\n        return _getPoolInfo(pool);\r\n    }\r\n\r\n    struct UserInfo {\r\n        uint balance;\r\n        uint totalSupply;\r\n        uint decimals;\r\n    }\r\n\r\n    function getUserInfo(address pool, address user) external view returns (UserInfo memory userInfo){\r\n        IUniswapV2Pair pair = IUniswapV2Pair(pool);\r\n        uint balance = pair.balanceOf(user);\r\n        uint totalSupply = pair.totalSupply();\r\n        uint8 decimals = pair.decimals();\r\n\r\n        userInfo.balance = balance;\r\n        userInfo.totalSupply = totalSupply;\r\n        userInfo.decimals = decimals;\r\n\r\n        return userInfo;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct UniswapV2Util.PoolInfo[]\",\"name\":\"poolInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct UniswapV2Util.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"UniswapV2Util","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4ce3212b68d3703eb521b0a9c4ca2a504cb09b8fa9d0e82e14f360be709cb48b"}]}