{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\ninterface IERC721 {\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\n\r\ncontract BulkNFTSender{\r\n    function airdropNFTs(address _owner, uint256[] calldata _tokenIds, address[] calldata _recipient) public {\r\n        address _NFTaddress = 0x7CB3c60E65fef3A9e0997F42a06F56fA0eAbd66D;\r\n        IERC721 nft = IERC721(_NFTaddress);\r\n        \r\n        require(nft.isApprovedForAll(_owner,address(this)),\"Operator not approved for transfer all\");\r\n\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            nft.safeTransferFrom(_owner,_recipient[i],_tokenIds[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_recipient\",\"type\":\"address[]\"}],\"name\":\"airdropNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BulkNFTSender","CompilerVersion":"v0.8.14+commit.80d49f37","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://feaee3bde8a6c0714a2251b09da8ef91d0d5daaafc3436a862f68efd4b63df2f"}]}