{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\n  |   | _ _|  __ \\   __ \\   ____|   \\  |  ____| __ __|  |   | \r\n  |   |   |   |   |  |   |  __|      \\ |  __|      |    |   | \r\n  ___ |   |   |   |  |   |  |      |\\  |  |        |    ___ | \r\n _|  _| ___| ____/  ____/  _____| _| \\_| _____|   _|   _|  _| \r\n\r\n    HIDDENETH.COM  \r\n\r\n    A VAST TREASURE OF ETH IS HIDDEN IN THE CLUES.\r\n    THE CLUES WILL GIVE YOU THE KEY.\r\n    ONLY ONE WILL SUCCEED.\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\npragma solidity 0.8.14;\r\n\r\ninterface IERC20\r\n{\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20\r\n{\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ninterface iToken is IERC20Metadata\r\n{\r\n    function decreaseAllowance(address spender, uint256 amount) external returns (bool);\r\n    function increaseAllowance(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n    function burn(address account, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract Token is iToken\r\n{\r\n    address private _owner;\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n\r\n    mapping(address => uint256) private _balance;\r\n    mapping(address => mapping(address => uint256)) private _allowed;\r\n\r\n    constructor(string memory _name_, string memory _symbol_, uint8 _decimals_, uint256 _totalSupply_)\r\n    {\r\n        _owner = msg.sender;\r\n        _name = _name_;\r\n        _symbol = _symbol_;\r\n        _decimals = _decimals_;\r\n        _totalSupply = _totalSupply_ * (10 ** _decimals);\r\n\r\n        _balance[_owner] = _totalSupply;\r\n        emit Transfer(address(0), _owner, _totalSupply);\r\n    }\r\n\r\n    function name() external view returns (string memory)\r\n    {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external view returns (string memory)\r\n    {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() external view returns (uint8)\r\n    {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256)\r\n    {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) external view returns (uint256)\r\n    {\r\n        return _balance[owner];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool)\r\n    {\r\n        require(_balance[msg.sender] > 0, \"Zero Balance!\");\r\n        require(_balance[msg.sender] >= amount, \"Low Balance!\");\r\n        _balance[msg.sender] -= amount;\r\n        _balance[recipient] += amount;\r\n        emit Transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256)\r\n    {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool)\r\n    {\r\n        _allowed[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 amount) external returns (bool)\r\n    {\r\n        require(_allowed[msg.sender][spender] >= amount, \"Allowance Can't be less than Zero!\");\r\n        _allowed[msg.sender][spender] -= amount;\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 amount) external returns (bool)\r\n    {\r\n        _allowed[msg.sender][spender] += amount;\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\r\n    {\r\n        require(_allowed[sender][msg.sender] > 0, \"Zero Allowance!\");\r\n        require(_allowed[sender][msg.sender] >= amount, \"Low Allowance!\");\r\n        require(_balance[sender] > 0, \"Zero Balance!\");\r\n        require(_balance[sender] >= amount, \"Low Balance!\");\r\n        _allowed[sender][msg.sender] -= amount;\r\n        _balance[sender] -= amount;\r\n        _balance[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    modifier onlyOwner\r\n    {\r\n        require(msg.sender == _owner, \"Permission Denied, You're not the Owner!\");\r\n        _;\r\n    }\r\n\r\n    function burn(address account, uint256 amount) onlyOwner external returns (bool)\r\n    {\r\n        require(_balance[account] > 0, \"Zero Balance!\");\r\n        require(_balance[account] >= amount, \"Low Balance!\");\r\n        _totalSupply -= amount;\r\n        _balance[account] -= amount;\r\n        emit Transfer(account, address(0), amount);\r\n        return true;\r\n    }\r\n\r\n    function mint(address account, uint256 amount) onlyOwner external returns (bool)\r\n    {\r\n        _totalSupply += amount;\r\n        _balance[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Token","CompilerVersion":"v0.8.14+commit.80d49f37","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000000000648494444454e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000648494444454e0000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://fbfa29c03bbfb12e7b48033dc32af7dec7d35e6a2709defb8ddbbc6c09447fed"}]}