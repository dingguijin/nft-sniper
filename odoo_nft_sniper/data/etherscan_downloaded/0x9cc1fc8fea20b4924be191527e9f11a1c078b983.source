{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\ncontract GebAuth {\r\n    // --- Authorization ---\r\n    mapping (address => uint) public authorizedAccounts;\r\n    /**\r\n     * @notice Add auth to an account\r\n     * @param account Account to add auth to\r\n     */\r\n    function addAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 1;\r\n        emit AddAuthorization(account);\r\n    }\r\n    /**\r\n     * @notice Remove auth from an account\r\n     * @param account Account to remove auth from\r\n     */\r\n    function removeAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 0;\r\n        emit RemoveAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Checks whether msg.sender can call an authed function\r\n    **/\r\n    modifier isAuthorized {\r\n        require(authorizedAccounts[msg.sender] == 1, \"GebAuth/account-not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Events ---\r\n    event AddAuthorization(address account);\r\n    event RemoveAuthorization(address account);\r\n\r\n    constructor () public {\r\n        authorizedAccounts[msg.sender] = 1;\r\n        emit AddAuthorization(msg.sender);\r\n    }\r\n}\r\n\r\nabstract contract StakedTokenAuctionHouseLike {\r\n    function modifyParameters(bytes32, address) external virtual;\r\n    function disableContract() external virtual;\r\n}\r\n\r\ncontract MinimalStakedTokenAuctionHouseOverlay is GebAuth {\r\n    StakedTokenAuctionHouseLike public auctionHouse;\r\n\r\n    constructor(address auctionHouse_) public GebAuth() {\r\n        require(auctionHouse_ != address(0), \"MinimalStakedTokenAuctionHouseOverlay/null-address\");\r\n        auctionHouse = StakedTokenAuctionHouseLike(auctionHouse_);\r\n    }\r\n\r\n    /*\r\n    * @notice Change the tokenBurner address in the auction house\r\n    */\r\n    function modifyParameters(bytes32 parameter, address data) external isAuthorized {\r\n        require(parameter == \"tokenBurner\", \"MinimalStakedTokenAuctionHouseOverlay/invalid-parameter\");\r\n        auctionHouse.modifyParameters(parameter, data);\r\n    }\r\n\r\n    /*\r\n    * @notice Disable the auction house\r\n    */\r\n    function disableContract() external isAuthorized {\r\n        auctionHouse.disableContract();\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionHouse\",\"outputs\":[{\"internalType\":\"contract StakedTokenAuctionHouseLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MinimalStakedTokenAuctionHouseOverlay","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000012806f5784ee31494f4b9cd81b5e2e397500dfca","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2d99dee78d213425916b42ceddc6e65d46bb224065048693409f1c3e72f0a96f"}]}