{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// ERC721Compliant is not an ERC721 token. It is the bare minimum that \r\n// can be accepted in the standard and does not represent an actual ERC721.\r\n\r\n// MartiansVotingPower by 0xInuarashi.eth\r\n// https://twitter.com/0xinuarashi || 0xInuarashi#1234\r\n\r\ncontract ERC721Compliant {\r\n    // Name and Symbol\r\n    string public name;\r\n    string public symbol;\r\n\r\n    // Constructor\r\n    constructor(string memory name_, string memory symbol_) {\r\n        name = name_; symbol = symbol_; }\r\n\r\n    // Magic Events \r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    // Magic Logic (Override These)\r\n    function totalSupply() public virtual view returns (uint256) {}\r\n    function ownerOf(uint256 tokenId_) public virtual view returns (address) {}\r\n    function balanceOf(address address_) public virtual view returns (uint256) {}\r\n\r\n    // Magic Compliance\r\n    function supportsInterface(bytes4 iid_) public virtual view returns (bool) {\r\n        return iid_ == 0x01ffc9a7 || iid_ == 0x80ac58cd || iid_ == 0x5b5e139f; \r\n    }\r\n\r\n    // Magic TokenURI\r\n    function tokenURI(uint256 tokenId_) public view virtual returns (string memory) {}\r\n}\r\n\r\nabstract contract Ownable {\r\n    address public owner;\r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Ownable: NO\"); _; }\r\n    function transferOwnership(address newOwner_) public virtual onlyOwner {\r\n        owner = newOwner_; \r\n    }\r\n}\r\n\r\ninterface iMartians {\r\n    function walletOfOwner(address address_) external view returns (uint256[] memory);\r\n}\r\n\r\ninterface iCS {\r\n    // The Character Struct\r\n    struct Character {\r\n        uint8  race_;\r\n        uint8  renderType_;\r\n        uint16 transponderId_;\r\n        uint16 spaceCapsuleId_;\r\n        uint8  augments_;\r\n        uint16 basePoints_;\r\n        uint16 totalEquipmentBonus_;\r\n    }\r\n\r\n    function characters(uint256 tokenId_) external view returns (Character memory);\r\n}\r\n\r\n// Using ERC721Compliant, we can Override functions that we want from above\r\ncontract MartiansVotingPower is ERC721Compliant(\"Martians\", \"MARTIANS\"), Ownable {\r\n\r\n    // Interfaces\r\n    iMartians public Martians = iMartians(0x075854b315F2cd7eC490853Bc5589B09E546449f);\r\n    iCS public CS = iCS(0xC7C40032E952F52F1ce7472913CDd8EeC89521c4);\r\n\r\n    // Augments to Voting Power Configuration\r\n    mapping(uint8 => uint256) public augmentsToVotingPower;\r\n\r\n    // Augments to Voting Power Owner Function\r\n    function setAugmentsToVotingPower(uint8[] calldata augments_, \r\n    uint256[] calldata power_) external onlyOwner {\r\n        require(augments_.length == power_.length, \"!= length\");\r\n        for (uint256 i = 0; i < augments_.length; i++) {\r\n            augmentsToVotingPower[augments_[i]] = power_[i];\r\n        }\r\n    }\r\n\r\n    // BalanceOf which acts as Voting Power\r\n    function balanceOf(address address_) public view override returns (uint256) {\r\n        // First, grab the wallet using walletOfOwner\r\n        uint256[] memory _wallet = Martians.walletOfOwner(address_);\r\n        \r\n        // Instantiate local power tracker and then loop CS to get powers\r\n        uint256 _votingPower;\r\n        for (uint256 i = 0; i < _wallet.length; i++) {\r\n            _votingPower += augmentsToVotingPower[CS.characters(_wallet[i]).augments_];\r\n        }\r\n\r\n        // Return the voting power\r\n        return _votingPower;\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CS\",\"outputs\":[{\"internalType\":\"contract iCS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Martians\",\"outputs\":[{\"internalType\":\"contract iMartians\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"augmentsToVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"augments_\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"power_\",\"type\":\"uint256[]\"}],\"name\":\"setAugmentsToVotingPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"iid_\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MartiansVotingPower","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4ab74a87973a609d7c4d880ea320f19547ae3a220e6b5918e10de8fdfcf277b4"}]}