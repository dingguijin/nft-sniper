{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\ncontract GebAuth {\r\n    // --- Authorization ---\r\n    mapping (address => uint) public authorizedAccounts;\r\n    /**\r\n     * @notice Add auth to an account\r\n     * @param account Account to add auth to\r\n     */\r\n    function addAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 1;\r\n        emit AddAuthorization(account);\r\n    }\r\n    /**\r\n     * @notice Remove auth from an account\r\n     * @param account Account to remove auth from\r\n     */\r\n    function removeAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 0;\r\n        emit RemoveAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Checks whether msg.sender can call an authed function\r\n    **/\r\n    modifier isAuthorized {\r\n        require(authorizedAccounts[msg.sender] == 1, \"GebAuth/account-not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Events ---\r\n    event AddAuthorization(address account);\r\n    event RemoveAuthorization(address account);\r\n\r\n    constructor () public {\r\n        authorizedAccounts[msg.sender] = 1;\r\n        emit AddAuthorization(msg.sender);\r\n    }\r\n}\r\n\r\nabstract contract DiscountCollateralAuctionHouseLike {\r\n    function modifyParameters(bytes32, uint256) virtual external;\r\n    function modifyParameters(bytes32, address) virtual external;\r\n}\r\ncontract MinimalDiscountCollateralAuctionHouseOverlay is GebAuth {\r\n    uint256                            public discountLimit;\r\n    uint256                            public constant WAD = 10 ** 18;\r\n\r\n    DiscountCollateralAuctionHouseLike public auctionHouse;\r\n\r\n    constructor(address auctionHouse_, uint256 discountLimit_) public GebAuth() {\r\n        require(auctionHouse_ != address(0), \"MinimalDiscountCollateralAuctionHouseOverlay/null-address\");\r\n        require(both(discountLimit_ > 0, discountLimit_ < WAD), \"MinimalDiscountCollateralAuctionHouseOverlay/invalid-discount-limit\");\r\n\r\n        auctionHouse  = DiscountCollateralAuctionHouseLike(auctionHouse_);\r\n        discountLimit = discountLimit_;\r\n    }\r\n\r\n    // --- Boolean Logic ---\r\n    function both(bool x, bool y) internal pure returns (bool z) {\r\n        assembly{ z := and(x, y)}\r\n    }\r\n    function either(bool x, bool y) internal pure returns (bool z) {\r\n        assembly{ z := or(x, y)}\r\n    }\r\n\r\n    /**\r\n     * @notice Modify an uint256 parameter\r\n     * @param parameter The name of the parameter to modify\r\n     * @param data New value for the parameter\r\n     */\r\n    function modifyParameters(bytes32 parameter, uint256 data) external isAuthorized {\r\n        require(\r\n          either(either(parameter == \"minDiscount\", parameter == \"maxDiscount\"), parameter == \"perSecondDiscountUpdateRate\"),\r\n          \"MinimalDiscountCollateralAuctionHouseOverlay/modify-forbidden-param\"\r\n        );\r\n\r\n        if (parameter == \"maxDiscount\") {\r\n            require(data >= discountLimit, \"MinimalDiscountCollateralAuctionHouseOverlay/invalid-max-discount\");\r\n        }\r\n\r\n        auctionHouse.modifyParameters(parameter, data);\r\n    }\r\n\r\n    /*\r\n    * @notice Modify the systemCoinOracle address\r\n    * @param parameter Must be \"systemCoinOracle\"\r\n    * @param data The new systemCoinOracle address\r\n    */\r\n    function modifyParameters(bytes32 parameter, address data) external isAuthorized {\r\n        if (parameter == \"systemCoinOracle\") {\r\n          auctionHouse.modifyParameters(parameter, data);\r\n        } else revert(\"MinimalDiscountCollateralAuctionHouseOverlay/modify-forbidden-param\");\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"discountLimit_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionHouse\",\"outputs\":[{\"internalType\":\"contract DiscountCollateralAuctionHouseLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MinimalDiscountCollateralAuctionHouseOverlay","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007ffdf1dfef2bfee32054c8e922959fb235679ade0000000000000000000000000000000000000000000000000bcbce7f1b150000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7aec3528a096706e7b9e948bcfb2d39558e9fe5577361d7fdd043426dd788d2d"}]}