{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract UserProxy {\r\n    address public owner;\r\n    address public target;\r\n\r\n    error onlyOwnerAllowed(address);\r\n\r\n    constructor(address _target, address _owner) {\r\n        owner = _owner;\r\n        target = _target;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if(msg.sender != owner) revert onlyOwnerAllowed(owner);\r\n        _;\r\n    }\r\n\r\n    function setOwner(address newOwner) external onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n\r\n    function setTarget(address newTarget) external onlyOwner {\r\n        target = newTarget;\r\n    }\r\n\r\n    function write(bytes[] memory data) external onlyOwner returns (bytes[] memory results){\r\n        results = new bytes[](data.length);\r\n        for (uint256 i = 0; i < data.length; i++) {\r\n            (bool success, bytes memory result) = target.delegatecall(data[i]);\r\n            if (!success) {\r\n                // tx revert silently\r\n                if (result.length < 68) revert();\r\n                assembly {\r\n                    result := add(result, 0x04)\r\n                }\r\n                revert(abi.decode(result, (string)));\r\n            }\r\n            results[i] = result;\r\n        }\r\n    }\r\n\r\n    fallback() external {\r\n        (bool success, ) = target.delegatecall(msg.data);\r\n\r\n        assembly {\r\n             let mem := mload(0x40)\r\n             returndatacopy(mem, 0, returndatasize())\r\n\r\n             switch success\r\n             case 0 { revert(mem, returndatasize()) }\r\n             default { return(mem, returndatasize()) }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onlyOwnerAllowed\",\"type\":\"error\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"write\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UserProxy","CompilerVersion":"v0.8.7+commit.e28d00a7","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c6d2c8f8987d16fff96babd5a230068656b508250000000000000000000000005bc33e0ffa027b8004a15928ca4fa1df5e35c915","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://01a6aa6b4bd6f42b296f191f6f5b4e67adb6340be5f74e8bd87178773953ac06"}]}